{"ast":null,"code":"/**\n * @license Angular v12.2.15\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ɵglobal, Injectable, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, ɵɵdefineInjectable, ɵɵinject, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n  constructor() {\n    super(...arguments);\n    this.supportsDOMEvents = true;\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\n\n\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    ɵsetRootDomAdapter(new BrowserDomAdapter());\n  }\n\n  onAndCancel(el, evt, listener) {\n    el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n\n    return () => {\n      el.removeEventListener(evt, listener, false);\n    };\n  }\n\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n\n  remove(node) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n\n  getDefaultDocument() {\n    return document;\n  }\n\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n\n\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n\n    if (target === 'document') {\n      return doc;\n    }\n\n    if (target === 'body') {\n      return doc.body;\n    }\n\n    return null;\n  }\n\n  getBaseHref(doc) {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n\n  resetBaseElement() {\n    baseElement = null;\n  }\n\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n\n  getCookie(name) {\n    return ɵparseCookieValue(document.cookie, name);\n  }\n\n}\n\nlet baseElement = null;\n\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n} // based on urlUtils.js in AngularJS 1\n\n\nlet urlParsingNode;\n\nfunction relativePath(url) {\n  urlParsingNode = urlParsingNode || document.createElement('a');\n  urlParsingNode.setAttribute('href', url);\n  const pathName = urlParsingNode.pathname;\n  return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\n\n\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nfunction appInitializerFactory(transitionId, document, injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const dom = ɵgetDOM();\n      const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n\n      for (let i = 0; i < styles.length; i++) {\n        dom.remove(styles[i]);\n      }\n    });\n  };\n}\n\nconst SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT, Injector],\n  multi: true\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass BrowserGetTestability {\n  static init() {\n    setTestabilityGetter(new BrowserGetTestability());\n  }\n\n  addToWindow(registry) {\n    ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n\n      return testability;\n    };\n\n    ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback\n    /** TODO #9100 */\n    ) => {\n      const testabilities = ɵglobal['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n\n      const decrement = function (didWork_\n      /** TODO #9100 */\n      ) {\n        didWork = didWork || didWork_;\n        count--;\n\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n\n      testabilities.forEach(function (testability\n      /** TODO #9100 */\n      ) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!ɵglobal['frameworkStabilizers']) {\n      ɵglobal['frameworkStabilizers'] = [];\n    }\n\n    ɵglobal['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n\n    const t = registry.getTestability(elem);\n\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n\n    if (ɵgetDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, elem.host, true);\n    }\n\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\n\n\nclass BrowserXhr {\n  build() {\n    return new XMLHttpRequest();\n  }\n\n}\n\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) {\n  return new (t || BrowserXhr)();\n};\n\nBrowserXhr.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: BrowserXhr,\n  factory: BrowserXhr.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\n\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\n\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\n\n\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst ɵ0 = () => ({\n  'ApplicationRef': ApplicationRef,\n  'NgZone': NgZone\n});\n\nconst CORE_TOKENS = ɵ0();\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\n\nfunction inspectNativeElementR2(element) {\n  return ɵgetDebugNodeR2(element);\n}\n\nfunction _createNgProbeR2(coreTokens) {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n  return () => inspectNativeElementR2;\n}\n\nfunction _ngProbeTokensToMap(tokens) {\n  return tokens.reduce((prev, t) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\n\n\nconst ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\n\nconst ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [{\n  provide: APP_INITIALIZER,\n  useFactory: _createNgProbeR2,\n  deps: [[NgProbeToken, new Optional()]],\n  multi: true\n}];\nconst ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__POST_R3__;\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\n\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n\nclass EventManager {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(plugins, _zone) {\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n\n\n  addEventListener(element, eventName, handler) {\n    const plugin = this._findPluginFor(eventName);\n\n    return plugin.addEventListener(element, eventName, handler);\n  }\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns A callback function that can be used to remove the handler.\n   * @deprecated No longer being used in Ivy code. To be removed in version 14.\n   */\n\n\n  addGlobalEventListener(target, eventName, handler) {\n    const plugin = this._findPluginFor(eventName);\n\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n\n\n  getZone() {\n    return this._zone;\n  }\n  /** @internal */\n\n\n  _findPluginFor(eventName) {\n    const plugin = this._eventNameToPlugin.get(eventName);\n\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n\n        return plugin;\n      }\n    }\n\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n\n}\n\nEventManager.ɵfac = function EventManager_Factory(t) {\n  return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nEventManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: EventManager,\n  factory: EventManager.ɵfac\n});\n\nEventManager.ctorParameters = () => [{\n  type: Array,\n  decorators: [{\n    type: Inject,\n    args: [EVENT_MANAGER_PLUGINS]\n  }]\n}, {\n  type: NgZone\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nclass EventManagerPlugin {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n\n  addGlobalEventListener(element, eventName, handler) {\n    const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n\n    return this.addEventListener(target, eventName, handler);\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass SharedStylesHost {\n  constructor() {\n    /** @internal */\n    this._stylesSet = new Set();\n  }\n\n  addStyles(styles) {\n    const additions = new Set();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions) {}\n\n  getAllStyles() {\n    return Array.from(this._stylesSet);\n  }\n\n}\n\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n  return new (t || SharedStylesHost)();\n};\n\nSharedStylesHost.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: SharedStylesHost,\n  factory: SharedStylesHost.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass DomSharedStylesHost extends SharedStylesHost {\n  constructor(_doc) {\n    super();\n    this._doc = _doc; // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n\n    this._hostNodes = new Map();\n\n    this._hostNodes.set(_doc.head, []);\n  }\n\n  _addStylesToHost(styles, host, styleNodes) {\n    styles.forEach(style => {\n      const styleEl = this._doc.createElement('style');\n\n      styleEl.textContent = style;\n      styleNodes.push(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode) {\n    const styleNodes = [];\n\n    this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n\n    this._hostNodes.set(hostNode, styleNodes);\n  }\n\n  removeHost(hostNode) {\n    const styleNodes = this._hostNodes.get(hostNode);\n\n    if (styleNodes) {\n      styleNodes.forEach(removeStyle);\n    }\n\n    this._hostNodes.delete(hostNode);\n  }\n\n  onStylesAdded(additions) {\n    this._hostNodes.forEach((styleNodes, hostNode) => {\n      this._addStylesToHost(additions, hostNode, styleNodes);\n    });\n  }\n\n  ngOnDestroy() {\n    this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n  }\n\n}\n\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n  return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomSharedStylesHost.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomSharedStylesHost,\n  factory: DomSharedStylesHost.ɵfac\n});\n\nDomSharedStylesHost.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nfunction removeStyle(styleNode) {\n  ɵgetDOM().remove(styleNode);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/'\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction flattenStyles(compId, styles, target) {\n  for (let i = 0; i < styles.length; i++) {\n    let style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler) {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return event => {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n\n    const allowDefaultBehavior = eventHandler(event);\n\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n\n    return undefined;\n  };\n}\n\nlet hasLoggedNativeEncapsulationWarning = false;\n\nclass DomRendererFactory2 {\n  constructor(eventManager, sharedStylesHost, appId) {\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.rendererByCompId = new Map();\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  createRenderer(element, type) {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated:\n        {\n          let renderer = this.rendererByCompId.get(type.id);\n\n          if (!renderer) {\n            renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n            this.rendererByCompId.set(type.id, renderer);\n          }\n\n          renderer.applyToHost(element);\n          return renderer;\n        }\n      // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n      // value that is not known (but previously was the value for ViewEncapsulation.Native)\n\n      case 1:\n      case ViewEncapsulation.ShadowDom:\n        // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n        // enum value that is not known (but previously was the value for\n        // ViewEncapsulation.Native)\n        !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n          hasLoggedNativeEncapsulationWarning = true;\n          console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n        }\n\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n\n      default:\n        {\n          if (!this.rendererByCompId.has(type.id)) {\n            const styles = flattenStyles(type.id, type.styles, []);\n            this.sharedStylesHost.addStyles(styles);\n            this.rendererByCompId.set(type.id, this.defaultRenderer);\n          }\n\n          return this.defaultRenderer;\n        }\n    }\n  }\n\n  begin() {}\n\n  end() {}\n\n}\n\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n  return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID));\n};\n\nDomRendererFactory2.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomRendererFactory2,\n  factory: DomRendererFactory2.ɵfac\n});\n\nDomRendererFactory2.ctorParameters = () => [{\n  type: EventManager\n}, {\n  type: DomSharedStylesHost\n}, {\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: [APP_ID]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: DomSharedStylesHost\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass DefaultDomRenderer2 {\n  constructor(eventManager) {\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n  }\n\n  destroy() {}\n\n  createElement(name, namespace) {\n    if (namespace) {\n      // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n      // will result in undefined, so we just return the namespace here.\n      return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n\n    return document.createElement(name);\n  }\n\n  createComment(value) {\n    return document.createComment(value);\n  }\n\n  createText(value) {\n    return document.createTextNode(value);\n  }\n\n  appendChild(parent, newChild) {\n    parent.appendChild(newChild);\n  }\n\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent, oldChild) {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode, preserveContent) {\n    let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n\n    return el;\n  }\n\n  parentNode(node) {\n    return node.parentNode;\n  }\n\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name; // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n\n      const namespaceUri = NAMESPACE_URIS[namespace];\n\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n        // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n        // which is wrong.\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n\n  setStyle(el, style, value, flags) {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el, name, value) {\n    NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n\n  listen(target, event, callback) {\n    NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n\n    if (typeof target === 'string') {\n      return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n    }\n\n    return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n  }\n\n}\n\nconst ɵ0$1 = () => '@'.charCodeAt(0);\n\nconst AT_CHARCODE = ɵ0$1();\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, component, appId) {\n    super(eventManager);\n    this.component = component;\n    const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n  }\n\n  applyToHost(element) {\n    super.setAttribute(element, this.hostAttr, '');\n  }\n\n  createElement(parent, name) {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, hostEl, component) {\n    super(eventManager);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n\n  removeChild(parent, oldChild) {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass DomEventsPlugin extends EventManagerPlugin {\n  constructor(doc) {\n    super(doc);\n  } // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n\n\n  supports(eventName) {\n    return true;\n  }\n\n  addEventListener(element, eventName, handler) {\n    element.addEventListener(eventName, handler, false);\n    return () => this.removeEventListener(element, eventName, handler);\n  }\n\n  removeEventListener(target, eventName, callback) {\n    return target.removeEventListener(eventName, callback);\n  }\n\n}\n\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n  return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomEventsPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomEventsPlugin,\n  factory: DomEventsPlugin.ɵfac\n});\n\nDomEventsPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Supported HammerJS recognizer event names.\n */\n\n\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\n\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\n\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n\nclass HammerGestureConfig {\n  constructor() {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n\n\n  buildHammer(element) {\n    const mc = new Hammer(element, this.options);\n    mc.get('pinch').set({\n      enable: true\n    });\n    mc.get('rotate').set({\n      enable: true\n    });\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n\n}\n\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n  return new (t || HammerGestureConfig)();\n};\n\nHammerGestureConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGestureConfig,\n  factory: HammerGestureConfig.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n\n\nclass HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(doc, _config, console, loader) {\n    super(doc);\n    this._config = _config;\n    this.console = console;\n    this.loader = loader;\n    this._loaderPromise = null;\n  }\n\n  supports(eventName) {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!window.Hammer && !this.loader) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` + `loaded and no custom loader has been specified.`);\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n\n  addEventListener(element, eventName, handler) {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n\n    if (!window.Hammer && this.loader) {\n      this._loaderPromise = this._loaderPromise || this.loader(); // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n\n      let cancelRegistration = false;\n\n      let deregister = () => {\n        cancelRegistration = true;\n      };\n\n      this._loaderPromise.then(() => {\n        // If Hammer isn't actually loaded when the custom loader resolves, give up.\n        if (!window.Hammer) {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n          }\n\n          deregister = () => {};\n\n          return;\n        }\n\n        if (!cancelRegistration) {\n          // Now that Hammer is loaded and the listener is being loaded for real,\n          // the deregistration function changes from canceling registration to removal.\n          deregister = this.addEventListener(element, eventName, handler);\n        }\n      }).catch(() => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` + `Hammer.JS loader failed.`);\n        }\n\n        deregister = () => {};\n      }); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n\n\n      return () => {\n        deregister();\n      };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n\n      const callback = function (eventObj) {\n        zone.runGuarded(function () {\n          handler(eventObj);\n        });\n      };\n\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback); // destroy mc to prevent memory leak\n\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName) {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n\n}\n\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n  return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8));\n};\n\nHammerGesturesPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGesturesPlugin,\n  factory: HammerGesturesPlugin.ɵfac\n});\n\nHammerGesturesPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: HammerGestureConfig,\n  decorators: [{\n    type: Inject,\n    args: [HAMMER_GESTURE_CONFIG]\n  }]\n}, {\n  type: ɵConsole\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [HAMMER_LOADER]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: ɵngcc0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\n\n\nconst HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\n\nconst HAMMER_PROVIDERS__PRE_R3__ = [{\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: HammerGesturesPlugin,\n  multi: true,\n  deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n}, {\n  provide: HAMMER_GESTURE_CONFIG,\n  useClass: HammerGestureConfig,\n  deps: []\n}];\nconst HAMMER_PROVIDERS = HAMMER_PROVIDERS__POST_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\n\nclass HammerModule {}\n\nHammerModule.ɵfac = function HammerModule_Factory(t) {\n  return new (t || HammerModule)();\n};\n\nHammerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: HammerModule\n});\nHammerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: HAMMER_PROVIDERS__PRE_R3__\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: HAMMER_PROVIDERS__PRE_R3__\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines supported modifiers for key events.\n */\n\n\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst DOM_KEY_LOCATION_NUMPAD = 3; // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n\nconst _keyMap = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n}; // There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\n\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nconst ɵ0$2 = event => event.altKey,\n      ɵ1 = event => event.ctrlKey,\n      ɵ2 = event => event.metaKey,\n      ɵ3 = event => event.shiftKey;\n/**\n * Retrieves modifiers from key-event objects.\n */\n\n\nconst MODIFIER_KEY_GETTERS = {\n  'alt': ɵ0$2,\n  'control': ɵ1,\n  'meta': ɵ2,\n  'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n\nclass KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(doc) {\n    super(doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n\n\n  supports(eventName) {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n\n\n  addEventListener(element, eventName, handler) {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n    const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n    return this.manager.getZone().runOutsideAngular(() => {\n      return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  static parseEventName(eventName) {\n    const parts = eventName.toLowerCase().split('.');\n    const domEventName = parts.shift();\n\n    if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop());\n\n    let fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index = parts.indexOf(modifierName);\n\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    } // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n\n\n    const result = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  static getEventFullKey(event) {\n    let fullKey = '';\n    let key = getEventKey(event);\n    key = key.toLowerCase();\n\n    if (key === ' ') {\n      key = 'space'; // for readability\n    } else if (key === '.') {\n      key = 'dot'; // because '.' is used as a separator in event names\n    }\n\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n\n\n  static eventCallback(fullKey, handler, zone) {\n    return (event\n    /** TODO #9100 */\n    ) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n  /** @internal */\n\n\n  static _normalizeKey(keyName) {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n\n      default:\n        return keyName;\n    }\n  }\n\n}\n\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n  return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nKeyEventsPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: KeyEventsPlugin,\n  factory: KeyEventsPlugin.ɵfac\n});\n\nKeyEventsPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nfunction getEventKey(event) {\n  let key = event.key;\n\n  if (key == null) {\n    key = event.keyIdentifier; // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n    // Safari cf\n    // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n\n    if (key == null) {\n      return 'Unidentified';\n    }\n\n    if (key.startsWith('U+')) {\n      key = String.fromCharCode(parseInt(key.substring(2), 16));\n\n      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n        // There is a bug in Chrome for numeric keypad keys:\n        // https://code.google.com/p/chromium/issues/detail?id=155654\n        // 1, 2, 3 ... are reported as A, B, C ...\n        key = _chromeNumKeyPadMap[key];\n      }\n    }\n  }\n\n  return _keyMap[key] || key;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n\n\nclass DomSanitizer {}\n\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) {\n  return new (t || DomSanitizer)();\n};\n\nDomSanitizer.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizer_Factory() {\n    return ɵɵinject(DomSanitizerImpl);\n  },\n  token: DomSanitizer,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(() => DomSanitizerImpl)\n    }]\n  }], null, null);\n})();\n\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\nclass DomSanitizerImpl extends DomSanitizer {\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n  }\n\n  sanitize(ctx, value) {\n    if (value == null) return null;\n\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value;\n\n      case SecurityContext.HTML:\n        if (ɵallowSanitizationBypassAndThrow(value, \"HTML\"\n        /* Html */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n\n      case SecurityContext.STYLE:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Style\"\n        /* Style */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return value;\n\n      case SecurityContext.SCRIPT:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Script\"\n        /* Script */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        throw new Error('unsafe value used in a script context');\n\n      case SecurityContext.URL:\n        const type = ɵgetSanitizationBypassType(value);\n\n        if (ɵallowSanitizationBypassAndThrow(value, \"URL\"\n        /* Url */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return ɵ_sanitizeUrl(String(value));\n\n      case SecurityContext.RESOURCE_URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\"\n        /* ResourceUrl */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n    }\n  }\n\n  bypassSecurityTrustHtml(value) {\n    return ɵbypassSanitizationTrustHtml(value);\n  }\n\n  bypassSecurityTrustStyle(value) {\n    return ɵbypassSanitizationTrustStyle(value);\n  }\n\n  bypassSecurityTrustScript(value) {\n    return ɵbypassSanitizationTrustScript(value);\n  }\n\n  bypassSecurityTrustUrl(value) {\n    return ɵbypassSanitizationTrustUrl(value);\n  }\n\n  bypassSecurityTrustResourceUrl(value) {\n    return ɵbypassSanitizationTrustResourceUrl(value);\n  }\n\n}\n\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n  return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizerImpl_Factory() {\n    return domSanitizerImplFactory(ɵɵinject(INJECTOR));\n  },\n  token: DomSanitizerImpl,\n  providedIn: \"root\"\n});\n\nDomSanitizerImpl.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [Injector]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nfunction errorHandler() {\n  return new ErrorHandler();\n}\n\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nconst ɵ0$3 = ɵPLATFORM_BROWSER_ID;\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵ0$3\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [{\n  provide: Sanitizer,\n  useExisting: DomSanitizer\n}, {\n  provide: DomSanitizer,\n  useClass: DomSanitizerImpl,\n  deps: [DOCUMENT]\n}];\nconst BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](https://g.co/ng/security).\n * @publicApi\n */\n\nconst BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__POST_R3__;\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\n\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nconst BROWSER_MODULE_PROVIDERS = [BROWSER_SANITIZATION_PROVIDERS, {\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, HAMMER_PROVIDERS, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, ELEMENT_PROBE_PROVIDERS];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n\nclass BrowserModule {\n  constructor(parentModule) {\n    if (parentModule) {\n      throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n\n\n  static withServerTransition(params) {\n    return {\n      ngModule: BrowserModule,\n      providers: [{\n        provide: APP_ID,\n        useValue: params.appId\n      }, {\n        provide: TRANSITION_ID,\n        useExisting: APP_ID\n      }, SERVER_TRANSITION_PROVIDERS]\n    };\n  }\n\n}\n\nBrowserModule.ɵfac = function BrowserModule_Factory(t) {\n  return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12));\n};\n\nBrowserModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserModule\n});\nBrowserModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: BROWSER_MODULE_PROVIDERS,\n  imports: [CommonModule, ApplicationModule]\n});\n\nBrowserModule.ctorParameters = () => [{\n  type: BrowserModule,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }, {\n    type: Inject,\n    args: [BrowserModule]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: BROWSER_MODULE_PROVIDERS,\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: BrowserModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BrowserModule]\n      }]\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, {\n    exports: function () {\n      return [CommonModule, ApplicationModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\n\n\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n\n\nclass Meta {\n  constructor(_doc) {\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n\n\n  addTag(tag, forceCreation = false) {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n\n\n  addTags(tags, forceCreation = false) {\n    if (!tags) return [];\n    return tags.reduce((result, tag) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n\n      return result;\n    }, []);\n  }\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n\n\n  getTag(attrSelector) {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n\n\n  getTags(attrSelector) {\n    if (!attrSelector) return [];\n\n    const list\n    /*NodeList*/\n    = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n\n    return list ? [].slice.call(list) : [];\n  }\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n\n\n  updateTag(tag, selector) {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta = this.getTag(selector);\n\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n\n    return this._getOrCreateElement(tag, true);\n  }\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n\n\n  removeTag(attrSelector) {\n    this.removeTagElement(this.getTag(attrSelector));\n  }\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n\n\n  removeTagElement(meta) {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  _getOrCreateElement(meta, forceCreation = false) {\n    if (!forceCreation) {\n      const selector = this._parseSelector(meta); // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n\n\n      const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n      if (elem !== undefined) return elem;\n    }\n\n    const element = this._dom.createElement('meta');\n\n    this._setMetaElementAttributes(meta, element);\n\n    const head = this._doc.getElementsByTagName('head')[0];\n\n    head.appendChild(element);\n    return element;\n  }\n\n  _setMetaElementAttributes(tag, el) {\n    Object.keys(tag).forEach(prop => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n    return el;\n  }\n\n  _parseSelector(tag) {\n    const attr = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  _containsAttributes(tag, elem) {\n    return Object.keys(tag).every(key => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n  }\n\n  _getMetaKeyMap(prop) {\n    return META_KEYS_MAP[prop] || prop;\n  }\n\n}\n\nMeta.ɵfac = function Meta_Factory(t) {\n  return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nMeta.ɵprov = ɵɵdefineInjectable({\n  factory: createMeta,\n  token: Meta,\n  providedIn: \"root\"\n});\n\nMeta.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\n\n\nconst META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create Title service.\n */\n\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n\n\nclass Title {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   */\n\n\n  getTitle() {\n    return this._doc.title;\n  }\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n\n\n  setTitle(newTitle) {\n    this._doc.title = newTitle || '';\n  }\n\n}\n\nTitle.ɵfac = function Title_Factory(t) {\n  return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nTitle.ɵprov = ɵɵdefineInjectable({\n  factory: createTitle,\n  token: Title,\n  providedIn: \"root\"\n});\n\nTitle.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst win = typeof window !== 'undefined' && window || {};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass ChangeDetectionPerfRecord {\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\n\n\nclass AngularProfiler {\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  } // tslint:disable:no-console\n\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n\n\n  timeChangeDetection(config) {\n    const record = config && config['record'];\n    const profileName = 'Change Detection'; // Profiler is not available in Android browsers without dev tools opened\n\n    const isProfilerAvailable = win.console.profile != null;\n\n    if (record && isProfilerAvailable) {\n      win.console.profile(profileName);\n    }\n\n    const start = performanceNow();\n    let numTicks = 0;\n\n    while (numTicks < 5 || performanceNow() - start < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n\n    const end = performanceNow();\n\n    if (record && isProfilerAvailable) {\n      win.console.profileEnd(profileName);\n    }\n\n    const msPerTick = (end - start) / numTicks;\n    win.console.log(`ran ${numTicks} change detection cycles`);\n    win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n\n}\n\nfunction performanceNow() {\n  return win.performance && win.performance.now ? win.performance.now() : new Date().getTime();\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\n\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\n\n\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction escapeHtml(text) {\n  const escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\n\nfunction unescapeHtml(text) {\n  const unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\n\n\nfunction makeStateKey(key) {\n  return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\n\n\nclass TransferState {\n  constructor() {\n    this.store = {};\n    this.onSerializeCallbacks = {};\n  }\n  /** @internal */\n\n\n  static init(initState) {\n    const transferState = new TransferState();\n    transferState.store = initState;\n    return transferState;\n  }\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n\n\n  get(key, defaultValue) {\n    return this.store[key] !== undefined ? this.store[key] : defaultValue;\n  }\n  /**\n   * Set the value corresponding to a key.\n   */\n\n\n  set(key, value) {\n    this.store[key] = value;\n  }\n  /**\n   * Remove a key from the store.\n   */\n\n\n  remove(key) {\n    delete this.store[key];\n  }\n  /**\n   * Test whether a key exists in the store.\n   */\n\n\n  hasKey(key) {\n    return this.store.hasOwnProperty(key);\n  }\n  /**\n   * Register a callback to provide the value for a key when `toJson` is called.\n   */\n\n\n  onSerialize(key, callback) {\n    this.onSerializeCallbacks[key] = callback;\n  }\n  /**\n   * Serialize the current state of the store to JSON.\n   */\n\n\n  toJson() {\n    // Call the onSerialize callbacks and put those values into the store.\n    for (const key in this.onSerializeCallbacks) {\n      if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n        try {\n          this.store[key] = this.onSerializeCallbacks[key]();\n        } catch (e) {\n          console.warn('Exception in onSerialize callback: ', e);\n        }\n      }\n    }\n\n    return JSON.stringify(this.store);\n  }\n\n}\n\nTransferState.ɵfac = function TransferState_Factory(t) {\n  return new (t || TransferState)();\n};\n\nTransferState.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TransferState,\n  factory: TransferState.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferState, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction initTransferState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  const script = doc.getElementById(appId + '-state');\n  let initialState = {};\n\n  if (script && script.textContent) {\n    try {\n      // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n\n  return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n\n\nclass BrowserTransferStateModule {}\n\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) {\n  return new (t || BrowserTransferStateModule)();\n};\n\nBrowserTransferStateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserTransferStateModule\n});\nBrowserTransferStateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: TransferState,\n    useFactory: initTransferState,\n    deps: [DOCUMENT, APP_ID]\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: TransferState,\n        useFactory: initTransferState,\n        deps: [DOCUMENT, APP_ID]\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\n\n\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all() {\n    return () => true;\n  }\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n\n\n  static css(selector) {\n    return debugElement => {\n      return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n    };\n  }\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n\n\n  static directive(type) {\n    return debugNode => debugNode.providerTokens.indexOf(type) !== -1;\n  }\n\n}\n\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nconst VERSION = new Version('12.2.15');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, BrowserXhr as ɵangular_packages_platform_browser_platform_browser_o, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_p, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };","map":{"version":3,"names":["ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","DOCUMENT","ɵPLATFORM_BROWSER_ID","XhrFactory","CommonModule","ɵngcc0","InjectionToken","ApplicationInitStatus","APP_INITIALIZER","Injector","setTestabilityGetter","ɵglobal","Injectable","ApplicationRef","NgZone","ɵgetDebugNodeR2","NgProbeToken","Optional","Inject","ViewEncapsulation","APP_ID","RendererStyleFlags2","ɵConsole","NgModule","ɵɵdefineInjectable","ɵɵinject","forwardRef","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵgetSanitizationBypassType","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","INJECTOR","ErrorHandler","ɵsetDocument","PLATFORM_ID","PLATFORM_INITIALIZER","Sanitizer","createPlatformFactory","platformCore","ɵINJECTOR_SCOPE","RendererFactory2","Testability","ApplicationModule","SkipSelf","Version","GenericBrowserDomAdapter","constructor","arguments","supportsDOMEvents","BrowserDomAdapter","makeCurrent","onAndCancel","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","remove","node","parentNode","removeChild","createElement","tagName","doc","getDefaultDocument","createHtmlDocument","document","implementation","createHTMLDocument","isElementNode","nodeType","Node","ELEMENT_NODE","isShadowRoot","DocumentFragment","getGlobalEventTarget","target","window","body","getBaseHref","href","getBaseElementHref","relativePath","resetBaseElement","baseElement","getUserAgent","navigator","userAgent","getCookie","name","cookie","querySelector","getAttribute","urlParsingNode","url","setAttribute","pathName","pathname","charAt","TRANSITION_ID","appInitializerFactory","transitionId","injector","get","donePromise","then","dom","styles","querySelectorAll","i","length","SERVER_TRANSITION_PROVIDERS","provide","useFactory","deps","multi","BrowserGetTestability","init","addToWindow","registry","elem","findInAncestors","testability","findTestabilityInTree","Error","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","didWork","decrement","didWork_","forEach","whenStable","push","t","getTestability","host","parentElement","BrowserXhr","build","XMLHttpRequest","ɵfac","BrowserXhr_Factory","ɵprov","token","factory","ngDevMode","ɵsetClassMetadata","type","CAMEL_CASE_REGEXP","DASH_CASE_REGEXP","camelCaseToDashCase","input","replace","m","toLowerCase","dashCaseToCamelCase","toUpperCase","exportNgVar","value","COMPILED","ng","ɵ0","CORE_TOKENS","INSPECT_GLOBAL_NAME","CORE_TOKENS_GLOBAL_NAME","inspectNativeElementR2","element","_createNgProbeR2","coreTokens","Object","assign","_ngProbeTokensToMap","tokens","reduce","prev","ELEMENT_PROBE_PROVIDERS__POST_R3__","ELEMENT_PROBE_PROVIDERS__PRE_R3__","ELEMENT_PROBE_PROVIDERS","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","p","manager","_plugins","slice","reverse","eventName","handler","plugin","_findPluginFor","addGlobalEventListener","getZone","supports","set","EventManager_Factory","ctorParameters","Array","decorators","args","EventManagerPlugin","_doc","SharedStylesHost","_stylesSet","Set","addStyles","additions","style","has","add","onStylesAdded","getAllStyles","from","SharedStylesHost_Factory","DomSharedStylesHost","_hostNodes","head","_addStylesToHost","styleNodes","styleEl","textContent","appendChild","addHost","hostNode","removeHost","removeStyle","delete","ngOnDestroy","DomSharedStylesHost_Factory","undefined","styleNode","NAMESPACE_URIS","COMPONENT_REGEX","NG_DEV_MODE","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","shimContentAttribute","componentShortId","shimHostAttribute","flattenStyles","compId","isArray","decoratePreventDefault","eventHandler","event","allowDefaultBehavior","preventDefault","returnValue","hasLoggedNativeEncapsulationWarning","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","encapsulation","Emulated","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDom","console","warn","ShadowDomRenderer","begin","end","DomRendererFactory2_Factory","String","data","create","destroy","namespace","createElementNS","createComment","createText","createTextNode","parent","newChild","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttribute","removeAttributeNS","addClass","classList","removeClass","setStyle","flags","DashCase","Important","setProperty","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","ɵ0$1","charCodeAt","AT_CHARCODE","nameKind","component","contentAttr","hostAttr","hostEl","shadowRoot","attachShadow","mode","nodeOrShadowRoot","DomEventsPlugin","DomEventsPlugin_Factory","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","options","enable","HammerGestureConfig_Factory","HammerGesturesPlugin","_config","loader","_loaderPromise","hasOwnProperty","isCustomEvent","zone","cancelRegistration","deregister","catch","runOutsideAngular","eventObj","runGuarded","on","off","indexOf","HammerGesturesPlugin_Factory","HAMMER_PROVIDERS__POST_R3__","HAMMER_PROVIDERS__PRE_R3__","useClass","HAMMER_PROVIDERS","HammerModule","HammerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","MODIFIER_KEYS","DOM_KEY_LOCATION_NUMPAD","_keyMap","_chromeNumKeyPadMap","ɵ0$2","altKey","ɵ1","ctrlKey","ɵ2","metaKey","ɵ3","shiftKey","MODIFIER_KEY_GETTERS","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","parts","split","domEventName","shift","key","_normalizeKey","pop","fullKey","modifierName","index","splice","result","getEventFullKey","getEventKey","modifierGetter","keyName","KeyEventsPlugin_Factory","keyIdentifier","startsWith","fromCharCode","parseInt","substring","location","DomSanitizer","DomSanitizer_Factory","DomSanitizerImpl","providedIn","useExisting","domSanitizerImplFactory","sanitize","ctx","NONE","HTML","toString","STYLE","SCRIPT","URL","RESOURCE_URL","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","DomSanitizerImpl_Factory","initDomAdapter","errorHandler","_document","ɵ0$3","INTERNAL_BROWSER_PLATFORM_PROVIDERS","useValue","BROWSER_SANITIZATION_PROVIDERS__PRE_R3__","BROWSER_SANITIZATION_PROVIDERS__POST_R3__","BROWSER_SANITIZATION_PROVIDERS","platformBrowser","BROWSER_MODULE_PROVIDERS","BrowserModule","parentModule","withServerTransition","params","ngModule","BrowserModule_Factory","imports","exports","ngJitMode","ɵɵsetNgModuleScope","createMeta","Meta","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","getTag","attrSelector","getTags","list","call","updateTag","selector","_parseSelector","meta","_setMetaElementAttributes","removeTag","removeTagElement","filter","_containsAttributes","getElementsByTagName","keys","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","Meta_Factory","httpEquiv","createTitle","Title","getTitle","title","setTitle","newTitle","Title_Factory","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","timeChangeDetection","config","record","profileName","isProfilerAvailable","profile","start","performanceNow","tick","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","escapeHtml","text","escapedText","s","unescapeHtml","unescapedText","makeStateKey","TransferState","store","onSerializeCallbacks","initState","transferState","defaultValue","hasKey","onSerialize","toJson","e","JSON","stringify","TransferState_Factory","initTransferState","script","getElementById","initialState","parse","BrowserTransferStateModule","BrowserTransferStateModule_Factory","By","all","css","debugElement","nativeElement","elementMatches","directive","debugNode","providerTokens","n","matches","msMatchesSelector","webkitMatchesSelector","VERSION","ɵBROWSER_SANITIZATION_PROVIDERS","ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵDomSharedStylesHost","ɵELEMENT_PROBE_PROVIDERS","ɵELEMENT_PROBE_PROVIDERS__POST_R3__","ɵHAMMER_PROVIDERS__POST_R3__","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵNAMESPACE_URIS","ɵSharedStylesHost","ɵTRANSITION_ID","ɵangular_packages_platform_browser_platform_browser_a","ɵangular_packages_platform_browser_platform_browser_b","ɵangular_packages_platform_browser_platform_browser_c","ɵangular_packages_platform_browser_platform_browser_d","ɵangular_packages_platform_browser_platform_browser_e","ɵangular_packages_platform_browser_platform_browser_f","ɵangular_packages_platform_browser_platform_browser_g","ɵangular_packages_platform_browser_platform_browser_h","ɵangular_packages_platform_browser_platform_browser_i","ɵangular_packages_platform_browser_platform_browser_j","ɵangular_packages_platform_browser_platform_browser_k","ɵangular_packages_platform_browser_platform_browser_l","ɵangular_packages_platform_browser_platform_browser_m","ɵangular_packages_platform_browser_platform_browser_n","ɵangular_packages_platform_browser_platform_browser_o","ɵangular_packages_platform_browser_platform_browser_p","ɵescapeHtml","ɵflattenStyles","ɵinitDomAdapter","ɵshimContentAttribute","ɵshimHostAttribute"],"sources":["C:/Users/rusli/Documents/GitHub/DAT250-LAB6-EXPERIMENT2/TodoList/node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js"],"sourcesContent":["/**\n * @license Angular v12.2.15\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ɵglobal, Injectable, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, ɵɵdefineInjectable, ɵɵinject, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    urlParsingNode = urlParsingNode || document.createElement('a');\n    urlParsingNode.setAttribute('href', url);\n    const pathName = urlParsingNode.pathname;\n    return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = ɵgetDOM();\n            const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n            for (let i = 0; i < styles.length; i++) {\n                dom.remove(styles[i]);\n            }\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    static init() {\n        setTestabilityGetter(new BrowserGetTestability());\n    }\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\nBrowserXhr.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0 = () => ({\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone,\n});\nconst CORE_TOKENS = (ɵ0)();\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nfunction inspectNativeElementR2(element) {\n    return ɵgetDebugNodeR2(element);\n}\nfunction _createNgProbeR2(coreTokens) {\n    exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n    exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n    return () => inspectNativeElementR2;\n}\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce((prev, t) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nconst ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nconst ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: _createNgProbeR2,\n        deps: [\n            [NgProbeToken, new Optional()],\n        ],\n        multi: true,\n    },\n];\nconst ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.ɵfac = function EventManager_Factory(t) { return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nEventManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: EventManager, factory: EventManager.ɵfac });\nEventManager.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS,] }] },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EventManager, [{\n        type: Injectable\n    }], function () { return [{ type: Array, decorators: [{\n                type: Inject,\n                args: [EVENT_MANAGER_PLUGINS]\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) { return new (t || SharedStylesHost)(); };\nSharedStylesHost.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SharedStylesHost, factory: SharedStylesHost.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this._hostNodes = new Map();\n        this._hostNodes.set(_doc.head, []);\n    }\n    _addStylesToHost(styles, host, styleNodes) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            styleNodes.push(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        const styleNodes = [];\n        this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n        this._hostNodes.set(hostNode, styleNodes);\n    }\n    removeHost(hostNode) {\n        const styleNodes = this._hostNodes.get(hostNode);\n        if (styleNodes) {\n            styleNodes.forEach(removeStyle);\n        }\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach((styleNodes, hostNode) => {\n            this._addStylesToHost(additions, hostNode, styleNodes);\n        });\n    }\n    ngOnDestroy() {\n        this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n    }\n}\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) { return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomSharedStylesHost.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomSharedStylesHost, factory: DomSharedStylesHost.ɵfac });\nDomSharedStylesHost.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nfunction removeStyle(styleNode) {\n    ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n            // value that is not known (but previously was the value for ViewEncapsulation.Native)\n            case 1:\n            case ViewEncapsulation.ShadowDom:\n                // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n                if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n                    // enum value that is not known (but previously was the value for\n                    // ViewEncapsulation.Native)\n                    !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n                    hasLoggedNativeEncapsulationWarning = true;\n                    console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n                }\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) { return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID)); };\nDomRendererFactory2.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomRendererFactory2, factory: DomRendererFactory2.ɵfac });\nDomRendererFactory2.ctorParameters = () => [\n    { type: EventManager },\n    { type: DomSharedStylesHost },\n    { type: String, decorators: [{ type: Inject, args: [APP_ID,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n        type: Injectable\n    }], function () { return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: String, decorators: [{\n                type: Inject,\n                args: [APP_ID]\n            }] }]; }, null); })();\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n            // will result in undefined, so we just return the namespace here.\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        parent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n                // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n                // which is wrong.\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst ɵ0$1 = () => '@'.charCodeAt(0);\nconst AT_CHARCODE = (ɵ0$1)();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) { return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomEventsPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomEventsPlugin, factory: DomEventsPlugin.ɵfac });\nDomEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) { return new (t || HammerGestureConfig)(); };\nHammerGestureConfig.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HammerGestureConfig, factory: HammerGestureConfig.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || this.loader();\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            });\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) { return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8)); };\nHammerGesturesPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HammerGesturesPlugin, factory: HammerGesturesPlugin.ɵfac });\nHammerGesturesPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: HammerGestureConfig, decorators: [{ type: Inject, args: [HAMMER_GESTURE_CONFIG,] }] },\n    { type: ɵConsole },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: HammerGestureConfig, decorators: [{\n                type: Inject,\n                args: [HAMMER_GESTURE_CONFIG]\n            }] }, { type: ɵngcc0.ɵConsole }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HAMMER_LOADER]\n            }] }]; }, null); })();\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\nconst HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\nconst HAMMER_PROVIDERS__PRE_R3__ = [\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n    },\n    { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n];\nconst HAMMER_PROVIDERS = HAMMER_PROVIDERS__POST_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.ɵfac = function HammerModule_Factory(t) { return new (t || HammerModule)(); };\nHammerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: HammerModule });\nHammerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: HAMMER_PROVIDERS__PRE_R3__ });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n        type: NgModule,\n        args: [{ providers: HAMMER_PROVIDERS__PRE_R3__ }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\nconst ɵ0$2 = (event) => event.altKey, ɵ1 = (event) => event.ctrlKey, ɵ2 = (event) => event.metaKey, ɵ3 = (event) => event.shiftKey;\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': ɵ0$2,\n    'control': ɵ1,\n    'meta': ɵ2,\n    'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    static getEventFullKey(event) {\n        let fullKey = '';\n        let key = getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName != key) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event /** TODO #9100 */) => {\n            if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) { return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nKeyEventsPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: KeyEventsPlugin, factory: KeyEventsPlugin.ɵfac });\nKeyEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nfunction getEventKey(event) {\n    let key = event.key;\n    if (key == null) {\n        key = event.keyIdentifier;\n        // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n        // Safari cf\n        // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n        if (key == null) {\n            return 'Unidentified';\n        }\n        if (key.startsWith('U+')) {\n            key = String.fromCharCode(parseInt(key.substring(2), 16));\n            if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                // There is a bug in Chrome for numeric keypad keys:\n                // https://code.google.com/p/chromium/issues/detail?id=155654\n                // 1, 2, 3 ... are reported as A, B, C ...\n                key = _chromeNumKeyPadMap[key];\n            }\n        }\n    }\n    return _keyMap[key] || key;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) { return new (t || DomSanitizer)(); };\nDomSanitizer.ɵprov = ɵɵdefineInjectable({ factory: function DomSanitizer_Factory() { return ɵɵinject(DomSanitizerImpl); }, token: DomSanitizer, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n    }], null, null); })();\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                const type = ɵgetSanitizationBypassType(value);\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) { return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({ factory: function DomSanitizerImpl_Factory() { return domSanitizerImplFactory(ɵɵinject(INJECTOR)); }, token: DomSanitizerImpl, providedIn: \"root\" });\nDomSanitizerImpl.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst ɵ0$3 = ɵPLATFORM_BROWSER_ID;\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵ0$3 },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [\n    { provide: Sanitizer, useExisting: DomSanitizer },\n    { provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT] },\n];\nconst BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](https://g.co/ng/security).\n * @publicApi\n */\nconst BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__POST_R3__;\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nconst BROWSER_MODULE_PROVIDERS = [\n    BROWSER_SANITIZATION_PROVIDERS,\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    HAMMER_PROVIDERS,\n    {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: Testability, useClass: Testability, deps: [NgZone] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    ELEMENT_PROBE_PROVIDERS,\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.ɵfac = function BrowserModule_Factory(t) { return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12)); };\nBrowserModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BrowserModule });\nBrowserModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: BROWSER_MODULE_PROVIDERS, imports: [CommonModule, ApplicationModule] });\nBrowserModule.ctorParameters = () => [\n    { type: BrowserModule, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [BrowserModule,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n        type: NgModule,\n        args: [{ providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule] }]\n    }], function () { return [{ type: BrowserModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [BrowserModule]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, { exports: function () { return [CommonModule, ApplicationModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n}\nMeta.ɵfac = function Meta_Factory(t) { return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nMeta.ɵprov = ɵɵdefineInjectable({ factory: createMeta, token: Meta, providedIn: \"root\" });\nMeta.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Meta, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.ɵfac = function Title_Factory(t) { return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nTitle.ɵprov = ɵɵdefineInjectable({ factory: createTitle, token: Title, providedIn: \"root\" });\nTitle.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Title, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /** @internal */\n    static init(initState) {\n        const transferState = new TransferState();\n        transferState.store = initState;\n        return transferState;\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.ɵfac = function TransferState_Factory(t) { return new (t || TransferState)(); };\nTransferState.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TransferState, factory: TransferState.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferState, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nfunction initTransferState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) { return new (t || BrowserTransferStateModule)(); };\nBrowserTransferStateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BrowserTransferStateModule });\nBrowserTransferStateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n        type: NgModule,\n        args: [{\n                providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('12.2.15');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, BrowserXhr as ɵangular_packages_platform_browser_platform_browser_o, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_p, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}